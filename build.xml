<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE project> <!-- minimal DTD to make Eclipse shut up about the file not having a DTD or Schema (it's a bug in Eclipse) -->
<project name="QRCode" basedir="." default="all">
	
	<!-- Sets up all properties for the build and tests -->
	<target name="configure-project">
		<echo>CONFIGURING PROJECT PROPERTIES</echo>
		
		<!-- Vaadin specific properties -->
		<property name="widgetset" value="fi.jasoft.qrcode.QrcodeWidgetset" />
		<property name="author" value="John Ahlroos" />
		<property name="addon-name" value="QRCode" />
		<property name="addon-version" value="development" />
		
		<!-- Artifact properties -->
		<property name="jar.filename" value="build/qrcode-${addon-version}.jar" />
		<property name="war.filename" value="build/${addon-name}.war" />
		
		<!-- Basic build properties -->
		<property name="src.dir" value="src" />
		<property name="test.dir" value="test" />
		<property name="demo.dir" value="demo" />
		<property name="build.dir" value="build/current" />
		<property name="classes.dir" value="${build.dir}/classes" />
		<property name="gwt.output.dir" value="${build.dir}/gwt" />
		<property name="lib" value="WebContent/WEB-INF/lib" />
		
		<property name="gwt.dir" value="/home/johnnie/Programs/gwt-2.3.0" />
		<property name="vaadin.jar" value="" />

		<path id="basic.classpath">
			<pathelement path="${vaadin.jar}" />
	        <fileset dir="${lib}">
		        <include name="**/*.jar"/>
		     </fileset>
			 <fileset dir="${gwt.dir}">
		        <include name="**/*.jar"/>
		     </fileset>
	    </path>
		
		<path id="src.classpath">
			<path refid="basic.classpath" />
			<pathelement path="${src.dir}" />
		</path>
		
		<path id="tests.classpath">
			<path refid="basic.classpath" />
			<pathelement path="${classes.dir}/src" />
			<pathelement path="${test.dir}" />
		</path>
			
		<path id="demo.classpath">
			<path refid="basic.classpath" />
			<pathelement path="${classes.dir}/src" />
			<pathelement path="${demo.dir}" />
		</path>
		
		<!-- Create dirs -->
		<mkdir dir="${classes.dir}"/>
	</target>
	
	
	<target name="compile-source" depends="configure-project">
		<echo>COMPILING SRC FOLDER</echo>
		<mkdir dir="${classes.dir}/src" />
	    <javac srcdir="${src.dir}" destdir="${classes.dir}/src" >
	    	<classpath refid="src.classpath" />
	    </javac>
		<copy todir="${classes.dir}/src">
			<fileset dir="${src.dir}">
			    <exclude name="**/.svn/*"/>
			</fileset>
		</copy>
	</target>
	
	
	<target name="compile-tests" depends="compile-source">
		<echo>COMPILING TEST FOLDER</echo>
		<mkdir dir="${classes.dir}/test" />
		<javac srcdir="${test.dir}" destdir="${classes.dir}/test" >
			<classpath refid="tests.classpath" />
		</javac>
		<copy todir="${classes.dir}/test">
			<fileset dir="${test.dir}">
			    <exclude name="**/.svn/*"/>
			</fileset>
		</copy>
	</target>
	
	<target name="compile-demo" depends="compile-source">
		<echo>COMPILING DEMO FOLDER</echo>
		<mkdir dir="${classes.dir}/demo" />
		<javac srcdir="${demo.dir}" destdir="${classes.dir}/demo" >
			<classpath refid="demo.classpath" />
		</javac>
		<copy todir="${classes.dir}/demo">
			<fileset dir="${demo.dir}">
			    <exclude name="**/.svn/*"/>
			</fileset>
		</copy>
	</target>

	<!-- Build the widget set. -->
	<target name="compile-widgetset" depends="compile-source, compile-demo">
		<echo>BUILDING WIDGETSET</echo>
		<echo>${user.dir}</echo>
		<mkdir dir="${build.dir}/widgetset" />
		
		<path id="widgetset.classpath">
			<path refid="basic.classpath" />
			<pathelement path="${classes.dir}/src" />
			<pathelement path="${classes.dir}/demo" />
		</path>
		
	    <java dir="." classname="com.google.gwt.dev.Compiler" failonerror="yes" fork="yes" maxmemory="512m">
	    	<classpath refid="widgetset.classpath" />
	    	<arg value="-war" />
	        <arg value="${build.dir}/widgetset" />
	    	<arg value="-style" />
	    	<arg value="OBF" />
	    	<arg value="-localWorkers" />
	    	<arg value="2" />
	        <arg value="${widgetset}" />
	    	<jvmarg value="-Xss8M" />
	    	<jvmarg value="-XX:MaxPermSize=256M" />
	        <jvmarg value="-Djava.awt.headless=true"/>
	    </java>
		
		<!-- Remove GWT compiler extra stuff -->
		<delete dir="${build.dir}/widgetset/WEB-INF"></delete>
	</target>
	
	
	<!-- Compile all classes -->
	<target name="compile" depends="compile-source,compile-tests,compile-demo" />
	
	
	<!-- Server side JUnit tests -->
	<target name="serverside-tests" depends="compile">
		<echo>RUNNING SERVERSIDE JUNIT TESTS</echo>
		<junit fork="yes" haltonfailure="yes">
			  	<classpath refid="classpath" />
			    <formatter type="plain" usefile="false" />
			    <batchtest>
		        	<fileset dir="${classes.dir}">
		        		<include name="**/**Test.class" />
		        		<exclude name="**/client/**" />
		        	</fileset>
		      	</batchtest>
		 </junit>
	</target>
	
	
	<!-- GWT Unit tests for the client side -->
	<target name="clientside-tests" depends="compile">
		<echo>RUNNING CLIENT SIDE JUNIT TESTS</echo>
		<mkdir dir="${gwt.output.dir}" />
		<junit fork="yes" haltonfailure="yes" printSummary="yes">
		  	<jvmarg value="-Dgwt.args=-out ${gwt.output.dir}" />
		  	<formatter type="plain" usefile="false" />
		  	<classpath refid="classpath" />
		     <batchtest>
		        	<fileset dir="${classes.dir}">
		        		<include name="**/client/**/**Test.class" />
		        	</fileset>
		      	</batchtest>
	  	</junit>
	</target>
	
	
	<!-- Execute both server and client side tests -->
	<target name="tests-all" depends="serverside-tests,clientside-tests" />

	
	<!-- Builds a Vaadin addon jar -->
	<target name ="jar" depends="compile">
		<echo>CREATING JAR ARCHIVE</echo>
		<mkdir dir="${build.dir}/jar" />
		<copy todir="${build.dir}/jar">
			<fileset dir="${classes.dir}/src" />
			<fileset dir="${src.dir}" />
		</copy>
		
		<!-- Create JAR archive -->
		<jar destfile="${jar.filename}" basedir="${build.dir}/jar">
			<manifest>
				<attribute name="Vaadin-Package-Version" value="1" />
				<attribute name="Vaadin-Widgetsets" value="${widgetset}" />
				<attribute name="Vaadin-License-Title" value="Apache 2.0" />
				<attribute name="Implementation-Title" value="${addon-name}" />
				<attribute name="Implementation-Version" value="${addon-version}" />
				<attribute name="Implementation-Vendor" value="${author}" />					
			</manifest>
		</jar>		
	</target>
	
	<target name="war" depends="compile-widgetset">
		<echo>CREATING WAR ARCHIVE</echo>
		<mkdir dir="${build.dir}/war" />
		
		<!-- Copy static content into WAR -->
		<copy todir="${build.dir}/war/">
			<fileset dir="WebContent" >
				<include name="META-INF/**/**"/>
				<include name="VAADIN/**/**" />
				<include name="WEB-INF/**/**" />
				<exclude name="**/.svn/**" />
			</fileset>	
		</copy>
		
		<!-- Include the vaadin jar -->
		<copy todir="${build.dir}/war/WEB-INF/lib">
			<fileset file="${vaadin.jar}" />
		</copy>
		
		<!-- Copy generated classes into WAR -->
		<copy todir="${build.dir}/war/WEB-INF/classes">
			<fileset dir="${classes.dir}/src" >
				<include name="**/**/**.class" />
			</fileset>
			<fileset dir="${src.dir}" >
				<exclude name="**/.svn/**" />
			</fileset>
			<fileset dir="${classes.dir}/demo" >
				<include name="**/**/**.class"/>
			</fileset>
			<fileset dir="${demo.dir}" >
				<exclude name="**/.svn/**" />
			</fileset>
		</copy>
		
		<!-- Copy widgetset into WAR -->
		<copy todir="${build.dir}/war/VAADIN/widgetsets">
			<fileset dir="${build.dir}/widgetset" />
		</copy>
		
		<!-- Create WAR archive -->
		<war destfile="${war.filename}" basedir="${build.dir}/war" />			
	</target>
	
	<target name="all" depends="jar, war">
		
		<!-- Cleanup job directory -->
		<delete dir="${build.dir}" />
	</target>
	
</project>